<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-4Q6K2RT" ignored="0" name="Default test" tests="2" failures="0" timestamp="04 Feb 2019 18:05:16 GMT" time="0.36" errors="0">
  <testcase name="@BeforeClass beforeClass" time="0.261" classname="qspider.acttime.userTest.NewTest">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: E:\New folder\IEDriverServer.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: E:\New folder\IEDriverServer.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:534)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:136)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.ie.InternetExplorerDriverService.access$000(InternetExplorerDriverService.java:32)
	at org.openqa.selenium.ie.InternetExplorerDriverService$Builder.findDefaultExecutable(InternetExplorerDriverService.java:167)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:329)
	at org.openqa.selenium.ie.InternetExplorerDriver.setupService(InternetExplorerDriver.java:273)
	at org.openqa.selenium.ie.InternetExplorerDriver.<init>(InternetExplorerDriver.java:195)
	at org.openqa.selenium.ie.InternetExplorerDriver.<init>(InternetExplorerDriver.java:152)
	at qspider.acttime.genricLib.DriverClass.getBrowser(DriverClass.java:14)
	at qspider.acttime.userTest.NewTest.beforeClass(NewTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:165)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="qspider.acttime.userTest.NewTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="qspider.acttime.userTest.NewTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="qspider.acttime.userTest.NewTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="qspider.acttime.userTest.NewTest">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterClass afterClass" time="0.0" classname="qspider.acttime.userTest.NewTest">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase name="UserCreateTest" time="0.001" classname="qspider.acttime.userTest.NewTest">
    <skipped/>
  </testcase> <!-- UserCreateTest -->
  <testcase name="deleteUser" time="0.0" classname="qspider.acttime.userTest.NewTest">
    <skipped/>
  </testcase> <!-- deleteUser -->
</testsuite> <!-- Default test -->
